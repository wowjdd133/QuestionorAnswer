{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\QuestionorAnswer\\\\question_or_answer\\\\components\\\\Description.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport { inject, observer } from 'mobx-react';\n\nvar Description = function Description(_ref) {\n  var store = _ref.store;\n  console.log(store);\n\n  var _useState = useState(\"\"),\n      description = _useState[0],\n      setDescription = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    console.log(e.target.value);\n    setDescription(e.target.value);\n  };\n\n  var handleDone = function handleDone() {\n    pushQuestion();\n    setTimeout(5000);\n    getQuestion();\n    Router.push('/');\n  };\n\n  var getQuestion = function getQuestion() {\n    console.log(questions);\n  };\n\n  var handleBack = function handleBack() {\n    Router.back();\n  };\n\n  var pushQuestion = function pushQuestion() {\n    stores.questions.push({\n      tag: localStorage.getItem('tag'),\n      title: localStorage.getItem('title'),\n      description: description\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"textarea\", {\n    onChange: handleChange,\n    className: \"description-textarea\",\n    style: {\n      width: 300,\n      height: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: handleBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Back\"), __jsx(\"button\", {\n    onClick: handleDone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Done\"));\n};\n\nexport default inject('stores')(observer(Description));","map":{"version":3,"sources":["C:\\Users\\user\\Documents\\GitHub\\QuestionorAnswer\\question_or_answer\\components\\Description.js"],"names":["React","useState","Router","inject","observer","Description","store","console","log","description","setDescription","handleChange","e","target","value","handleDone","pushQuestion","setTimeout","getQuestion","push","questions","handleBack","back","stores","tag","localStorage","getItem","title","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AADiC,kBAEKL,QAAQ,CAAC,EAAD,CAFb;AAAA,MAE1BQ,WAF0B;AAAA,MAEbC,cAFa;;AAIjC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,MAAF,CAASC,KAArB;AACAJ,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAHD;;AAKA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,IAAAA,YAAY;AACZC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,WAAW;AACXhB,IAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD,GALD;;AAOA,MAAMD,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBX,IAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBnB,IAAAA,MAAM,CAACoB,IAAP;AACD,GAFD;;AAIA,MAAMN,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBO,IAAAA,MAAM,CAACH,SAAP,CAAiBD,IAAjB,CAAsB;AACpBK,MAAAA,GAAG,EAAEC,YAAY,CAACC,OAAb,CAAqB,KAArB,CADe;AAEpBC,MAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFa;AAGpBjB,MAAAA,WAAW,EAAEA;AAHO,KAAtB;AAKD,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,QAAQ,EAAIE,YAAtB;AAAoC,IAAA,SAAS,EAAE,sBAA/C;AAAsE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAQ,IAAA,OAAO,EAAER,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE;AAAQ,IAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF;AASD,CAzCD;;AA2CA,eAAeZ,MAAM,CAAC,QAAD,CAAN,CAAiBC,QAAQ,CAACC,WAAD,CAAzB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Router from 'next/router';\r\nimport {inject, observer} from 'mobx-react';\r\n\r\nconst Description = ({ store }) => {\r\n  console.log(store);\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    console.log(e.target.value);\r\n    setDescription(e.target.value)\r\n  };\r\n  \r\n  const handleDone = () => {\r\n    pushQuestion();\r\n    setTimeout(5000);\r\n    getQuestion();\r\n    Router.push('/');\r\n  }\r\n\r\n  const getQuestion = () => {\r\n    console.log(questions);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    Router.back();\r\n  }\r\n\r\n  const pushQuestion = () => {\r\n    stores.questions.push({\r\n      tag: localStorage.getItem('tag'),\r\n      title: localStorage.getItem('title'),\r\n      description: description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <textarea onChange = {handleChange} className= \"description-textarea\" style={{ width: 300, height: 400}}>\r\n\r\n      </textarea>\r\n      <button onClick={handleBack}>Back</button>\r\n      <button onClick={handleDone}>Done</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default inject('stores')(observer(Description));"]},"metadata":{},"sourceType":"module"}